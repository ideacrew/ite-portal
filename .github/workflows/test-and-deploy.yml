name: Test and Deploy

on:
  push:
    paths:
      - 'firestore.rules'
      - 'apps/**'
      - 'libs/**'
      - 'package-lock.json'
      - 'package.json'
    branches:
      - trunk

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  DBH_ENV: 'dev'
  S3_BUCKET: 'portal-dev-dbh-ite-com'
  CLOUDFRONT_DIST_ID: 'EVD9XJF7IQQ3F'
  BASE_URL: 'https://portal-dev.dbh-ite.com'
  REPO_NAME: 'ite-portal'

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      shortSha: ${{ steps.prep.outputs.short_sha }}
    steps:
      - name: Git branch name
        id: git-branch-name
        uses: EthanSK/git-branch-name-action@v1
      - name: Prepare info
        id: prep
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
          echo ::set-output name=short_sha::$SHORT_SHA
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: trunk
      - run: npm ci
      - run: npx nx workspace-lint
      - run: npx nx format:check
      - run: npx nx affected --target=lint --parallel=2
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: trunk
      - run: npm ci
      - run: npx nx affected --target=test --parallel=2 --ci --code-coverage
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: trunk
      - run: npm ci
      - run: npx nx affected --target=build --parallel=2
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: affected-apps
          path: dist/apps
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: trunk
      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-
      - name: install dependencies and verify Cypress
        env:
          # make sure every Cypress install prints minimal information
          CI: 1
        # print Cypress and OS info
        run: |
          npm ci
          npx cypress verify
          npx cypress info
          npx cypress version
          npx cypress version --component package
          npx cypress version --component binary
          npx cypress version --component electron
          npx cypress version --component node
      - run: npx nx affected --target=e2e
  deploy-aws:
    environment: aws-dev
    needs: [prep, lint, test, build, e2e]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: trunk
      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: affected-apps
          path: dist/apps
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: run many deployments
        run: npx nx affected --target=deploy:dev
